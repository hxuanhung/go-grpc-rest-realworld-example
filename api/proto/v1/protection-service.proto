syntax = "proto3";

package proto;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Get health status of services.
message GetHealthCheckRequest {
}

// Health status of services.
message GetHealthCheckResponse {
	// The status of the relevant sub services.
	string status = 1;
}

message User {
	string email = 1;
	string passwordHash = 2;
}

message UserLoginRequest {
	message User{
		string email = 1;
		string password = 2;
	}
	User user = 1;
}

message UserLoginResponse {
	string email = 1;
	string token = 2;
}

service AcreProtection {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_tag) = {
		  description: "Service description -- which should not be used in place of the documentation comment!"
	  };
	  
	 // Check the health of the acre processor. This is used by load balancers to check end-to-end service health. Not yet implemented.
	  rpc HealthCheck(GetHealthCheckRequest) returns (GetHealthCheckResponse) {
		  option (google.api.http) = {
			  get: "/v1/health_check"
		  };
		  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			  tags: "Service"
		  };
	}
	  rpc UserLogin(UserLoginRequest) returns (UserLoginResponse) {
		  option (google.api.http) = {
			  post: "/v1/users/login"
			  body: "*"
		  };
		  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			  tags: "User"
		  };
	}
  }