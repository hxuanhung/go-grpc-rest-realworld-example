// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protection-service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Get health status of services.
type GetHealthCheckRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHealthCheckRequest) Reset()         { *m = GetHealthCheckRequest{} }
func (m *GetHealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*GetHealthCheckRequest) ProtoMessage()    {}
func (*GetHealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0286227bc8ecf37e, []int{0}
}

func (m *GetHealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHealthCheckRequest.Unmarshal(m, b)
}
func (m *GetHealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *GetHealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHealthCheckRequest.Merge(m, src)
}
func (m *GetHealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_GetHealthCheckRequest.Size(m)
}
func (m *GetHealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHealthCheckRequest proto.InternalMessageInfo

// Health status of services.
type GetHealthCheckResponse struct {
	// The status of the relevant sub services.
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHealthCheckResponse) Reset()         { *m = GetHealthCheckResponse{} }
func (m *GetHealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*GetHealthCheckResponse) ProtoMessage()    {}
func (*GetHealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0286227bc8ecf37e, []int{1}
}

func (m *GetHealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHealthCheckResponse.Unmarshal(m, b)
}
func (m *GetHealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *GetHealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHealthCheckResponse.Merge(m, src)
}
func (m *GetHealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_GetHealthCheckResponse.Size(m)
}
func (m *GetHealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHealthCheckResponse proto.InternalMessageInfo

func (m *GetHealthCheckResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type User struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	PasswordHash         string   `protobuf:"bytes,2,opt,name=passwordHash,proto3" json:"passwordHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_0286227bc8ecf37e, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

type UserLoginRequest struct {
	User                 *UserLoginRequest_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UserLoginRequest) Reset()         { *m = UserLoginRequest{} }
func (m *UserLoginRequest) String() string { return proto.CompactTextString(m) }
func (*UserLoginRequest) ProtoMessage()    {}
func (*UserLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0286227bc8ecf37e, []int{3}
}

func (m *UserLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginRequest.Unmarshal(m, b)
}
func (m *UserLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginRequest.Marshal(b, m, deterministic)
}
func (m *UserLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginRequest.Merge(m, src)
}
func (m *UserLoginRequest) XXX_Size() int {
	return xxx_messageInfo_UserLoginRequest.Size(m)
}
func (m *UserLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginRequest proto.InternalMessageInfo

func (m *UserLoginRequest) GetUser() *UserLoginRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserLoginRequest_User struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginRequest_User) Reset()         { *m = UserLoginRequest_User{} }
func (m *UserLoginRequest_User) String() string { return proto.CompactTextString(m) }
func (*UserLoginRequest_User) ProtoMessage()    {}
func (*UserLoginRequest_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_0286227bc8ecf37e, []int{3, 0}
}

func (m *UserLoginRequest_User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginRequest_User.Unmarshal(m, b)
}
func (m *UserLoginRequest_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginRequest_User.Marshal(b, m, deterministic)
}
func (m *UserLoginRequest_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginRequest_User.Merge(m, src)
}
func (m *UserLoginRequest_User) XXX_Size() int {
	return xxx_messageInfo_UserLoginRequest_User.Size(m)
}
func (m *UserLoginRequest_User) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginRequest_User.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginRequest_User proto.InternalMessageInfo

func (m *UserLoginRequest_User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserLoginRequest_User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserLoginResponse struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginResponse) Reset()         { *m = UserLoginResponse{} }
func (m *UserLoginResponse) String() string { return proto.CompactTextString(m) }
func (*UserLoginResponse) ProtoMessage()    {}
func (*UserLoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0286227bc8ecf37e, []int{4}
}

func (m *UserLoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginResponse.Unmarshal(m, b)
}
func (m *UserLoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginResponse.Marshal(b, m, deterministic)
}
func (m *UserLoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginResponse.Merge(m, src)
}
func (m *UserLoginResponse) XXX_Size() int {
	return xxx_messageInfo_UserLoginResponse.Size(m)
}
func (m *UserLoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginResponse proto.InternalMessageInfo

func (m *UserLoginResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserLoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*GetHealthCheckRequest)(nil), "proto.GetHealthCheckRequest")
	proto.RegisterType((*GetHealthCheckResponse)(nil), "proto.GetHealthCheckResponse")
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*UserLoginRequest)(nil), "proto.UserLoginRequest")
	proto.RegisterType((*UserLoginRequest_User)(nil), "proto.UserLoginRequest.User")
	proto.RegisterType((*UserLoginResponse)(nil), "proto.UserLoginResponse")
}

func init() { proto.RegisterFile("protection-service.proto", fileDescriptor_0286227bc8ecf37e) }

var fileDescriptor_0286227bc8ecf37e = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x56, 0xa2, 0x26, 0x90, 0x29, 0x82, 0xb2, 0x0a, 0x6d, 0x64, 0x15, 0x69, 0x31, 0x1c, 0x10,
	0xc2, 0x75, 0x29, 0x17, 0xc4, 0x05, 0x2c, 0x0e, 0xf4, 0xc0, 0x01, 0x05, 0x81, 0x90, 0x38, 0xa0,
	0xed, 0x7a, 0xb0, 0xad, 0x3a, 0x3b, 0xc6, 0xb3, 0x6e, 0x6e, 0x1c, 0x78, 0x84, 0xf0, 0x4a, 0xbc,
	0x01, 0xaf, 0xc0, 0x83, 0x20, 0xef, 0x6e, 0xa3, 0xd2, 0xbf, 0xd3, 0x6a, 0x66, 0x3e, 0x7d, 0xdf,
	0x37, 0xdf, 0x0e, 0xcc, 0x9a, 0x96, 0x2c, 0x6a, 0x5b, 0x91, 0x49, 0x18, 0xdb, 0x93, 0x4a, 0xe3,
	0x5e, 0xdf, 0x22, 0x31, 0x72, 0x4f, 0xb4, 0x5b, 0x10, 0x15, 0x35, 0xa6, 0xaa, 0xa9, 0x52, 0x65,
	0x0c, 0x59, 0xd5, 0x63, 0xd9, 0x83, 0xa2, 0xa7, 0xee, 0xd1, 0x49, 0x81, 0x26, 0xe1, 0xa5, 0x2a,
	0x0a, 0x6c, 0x53, 0x6a, 0x1c, 0xe2, 0x22, 0x3a, 0xde, 0x81, 0x7b, 0x6f, 0xd1, 0x1e, 0xa2, 0xaa,
	0x6d, 0xf9, 0xa6, 0x44, 0x7d, 0x3c, 0xc7, 0xef, 0x1d, 0xb2, 0x8d, 0xf7, 0x61, 0xfb, 0xfc, 0x80,
	0x1b, 0x32, 0x8c, 0x62, 0x1b, 0xc6, 0x6c, 0x95, 0xed, 0x78, 0x36, 0x90, 0x83, 0xc7, 0x93, 0x79,
	0xa8, 0xe2, 0xd7, 0xb0, 0xf1, 0x91, 0xb1, 0x15, 0x53, 0x18, 0xe1, 0x42, 0x55, 0x75, 0x18, 0xfb,
	0x42, 0xc4, 0x70, 0xab, 0x51, 0xcc, 0x4b, 0x6a, 0xf3, 0x43, 0xc5, 0xe5, 0x6c, 0xe8, 0x86, 0xff,
	0xf5, 0xe2, 0x1f, 0xb0, 0xd5, 0x33, 0xbc, 0xa3, 0xa2, 0x32, 0xc1, 0x87, 0xd8, 0x87, 0x8d, 0x8e,
	0xb1, 0x75, 0x64, 0x9b, 0x07, 0xbb, 0xde, 0xf6, 0xde, 0x79, 0x98, 0x6b, 0xcc, 0x1d, 0x32, 0x7a,
	0x71, 0xad, 0x8f, 0x08, 0x6e, 0x9e, 0x6a, 0x06, 0x0f, 0xeb, 0x3a, 0x7e, 0x05, 0x77, 0xcf, 0x10,
	0x87, 0x75, 0x2f, 0xa7, 0x99, 0xc2, 0xc8, 0xd2, 0x31, 0x9a, 0xc0, 0xe1, 0x8b, 0x83, 0xdf, 0x43,
	0xb8, 0x9d, 0xe9, 0x16, 0xdf, 0xaf, 0x7f, 0x50, 0x34, 0xb0, 0x79, 0x26, 0x44, 0x71, 0xba, 0xc0,
	0xa5, 0xa1, 0x47, 0xf7, 0xaf, 0x98, 0x7a, 0x2b, 0xf1, 0xa3, 0x55, 0x36, 0x81, 0x1b, 0x1f, 0xfc,
	0x4d, 0xfc, 0xfc, 0xf3, 0xf7, 0xd7, 0x50, 0x88, 0xad, 0xf4, 0xe4, 0x59, 0x5a, 0x3a, 0xf0, 0x57,
	0xed, 0x24, 0x34, 0x4c, 0xd6, 0x5b, 0x88, 0x9d, 0x2b, 0x02, 0x8b, 0x66, 0x17, 0x07, 0x41, 0xe5,
	0xe1, 0x2a, 0x1b, 0xfb, 0x08, 0x9d, 0xc4, 0x34, 0xbe, 0xd3, 0x4b, 0xf4, 0xd1, 0x72, 0x5a, 0xf7,
	0xc8, 0x97, 0x83, 0x27, 0xd1, 0x97, 0x55, 0xf6, 0x59, 0x7c, 0x0a, 0x56, 0x64, 0x8e, 0xac, 0xdb,
	0xca, 0x1d, 0x99, 0x4c, 0x12, 0xb9, 0x2c, 0x2b, 0x5d, 0x4a, 0x2e, 0xa9, 0xab, 0x73, 0x69, 0xc8,
	0xca, 0x23, 0x94, 0x1d, 0x63, 0x2e, 0x2b, 0x23, 0x9b, 0x5a, 0x69, 0x94, 0xf4, 0x4d, 0xda, 0x12,
	0x65, 0x4e, 0xba, 0x5b, 0xa0, 0xf1, 0x27, 0x29, 0x35, 0x2d, 0xfa, 0xe2, 0xc1, 0xd1, 0xd8, 0x59,
	0x7b, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x03, 0x1f, 0xa4, 0x0a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AcreProtectionClient is the client API for AcreProtection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AcreProtectionClient interface {
	// Check the health of the acre processor. This is used by load balancers to check end-to-end service health. Not yet implemented.
	HealthCheck(ctx context.Context, in *GetHealthCheckRequest, opts ...grpc.CallOption) (*GetHealthCheckResponse, error)
	UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error)
}

type acreProtectionClient struct {
	cc *grpc.ClientConn
}

func NewAcreProtectionClient(cc *grpc.ClientConn) AcreProtectionClient {
	return &acreProtectionClient{cc}
}

func (c *acreProtectionClient) HealthCheck(ctx context.Context, in *GetHealthCheckRequest, opts ...grpc.CallOption) (*GetHealthCheckResponse, error) {
	out := new(GetHealthCheckResponse)
	err := c.cc.Invoke(ctx, "/proto.AcreProtection/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *acreProtectionClient) UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	out := new(UserLoginResponse)
	err := c.cc.Invoke(ctx, "/proto.AcreProtection/UserLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AcreProtectionServer is the server API for AcreProtection service.
type AcreProtectionServer interface {
	// Check the health of the acre processor. This is used by load balancers to check end-to-end service health. Not yet implemented.
	HealthCheck(context.Context, *GetHealthCheckRequest) (*GetHealthCheckResponse, error)
	UserLogin(context.Context, *UserLoginRequest) (*UserLoginResponse, error)
}

// UnimplementedAcreProtectionServer can be embedded to have forward compatible implementations.
type UnimplementedAcreProtectionServer struct {
}

func (*UnimplementedAcreProtectionServer) HealthCheck(ctx context.Context, req *GetHealthCheckRequest) (*GetHealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (*UnimplementedAcreProtectionServer) UserLogin(ctx context.Context, req *UserLoginRequest) (*UserLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserLogin not implemented")
}

func RegisterAcreProtectionServer(s *grpc.Server, srv AcreProtectionServer) {
	s.RegisterService(&_AcreProtection_serviceDesc, srv)
}

func _AcreProtection_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcreProtectionServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AcreProtection/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcreProtectionServer).HealthCheck(ctx, req.(*GetHealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AcreProtection_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcreProtectionServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AcreProtection/UserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcreProtectionServer).UserLogin(ctx, req.(*UserLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AcreProtection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AcreProtection",
	HandlerType: (*AcreProtectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _AcreProtection_HealthCheck_Handler,
		},
		{
			MethodName: "UserLogin",
			Handler:    _AcreProtection_UserLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protection-service.proto",
}
